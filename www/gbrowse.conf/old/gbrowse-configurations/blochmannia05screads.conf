[GENERAL]
description   =  blochmannia05 Supercontigs
db_adaptor    = Bio::DB::GFF
db_args       = -adaptor dbi::mysqlopt 
	        -dsn     dbi:mysql:database=blochmannia05screads;host=gmoddb.mbl.edu
user          = gbrowse
pass          = ropassword123


init_code =
  $ENV{BLASTDB} = '/blastdb';
  $ENV{BLASTMAT} = '/blastdb';
  sub read_title {
	my $feature = shift;
        my $titlevalue = $feature->name .  ':' . $feature->ref . ':' . $feature->start . '...' . $feature->stop . "\n\n" .
        '  Partner Name:' . $feature->attributes('ReadPair') . "\n" .
        'Partner Contig:' . $feature->attributes('ReadPairContig') ;
        return $titlevalue;
  }
  sub read_insert_color {
	my $feature = shift;
	my $obs_insert_size = $feature->attributes('ObservedInsertSize');
	my $given_insert_size = $feature->attributes('GivenInsertSize');
	my $given_std_dev =  $feature->attributes('GivenInsertStdDev');
	my $low_val = $given_insert_size - (3*$given_std_dev);
	my $high_val = $given_insert_size + (3*$given_std_dev);
	my $feature_method = $feature->method();
	if( $obs_insert_size > $high_val )
	{
		return 'red';
	} elsif($obs_insert_size < $low_val)
	{
		return 'pink';
	}
	if($feature_method eq 'read')
	{
		return "yellow";
	} elsif($feature_method eq 'missing-partner')
	{
		return "wheat";
	}elsif($feature_method eq 'partner-different-contig-negative-gap')
        {
                return "orange";
        }elsif($feature_method eq 'partner-different-contig-positive-gap')
        {
                return "blue";
        }elsif($feature_method eq 'partner-different-contig-same-direction')
        {
                return "brown";
        }elsif($feature_method eq 'partner-different-supercontig')
        {
                return "indigo";
        }
  }
  sub read_link {
	my $feature = shift;
	return '/perl/site/blochmannia05?page=showread&read=' . $feature->name();
  }
  sub orf_link {
       my $feature = shift;
        return '/perl/site/blochmannia05?page=showorf&orf=' . $feature->name();
  }
  sub orf_name{
        my $feature = shift;
        my $retval = $feature->name;
        if($feature->attributes('Annotation') ne 'No official annotation')
        {
                $retval = $retval . ' - ' . $feature->attributes('Annotation');
        } elsif($feature->attributes('nr') ne 'No significant nr Hit')
        {
                my @nr_desc = split(/\|/, $feature->attributes('nr') );
                $retval = $retval . ' - ' . $nr_desc[4];
        } else
        {
                $retval = $feature->name . ' - ' . 'Hypothetical Protein';
        }
        return $retval;
  }

aggregators = transcript alignment orf overlap_coverage{coverage}

plugin_path = /xraid/bioware/gmod/gbrowse-plugins/

plugins = SequenceDumper FastaDumper RestrictionAnnotator BatchDumper GFFDumper SageAnnotator OligoFinder AlignTwoSequences SequenceFinder OrfFinder

# Web site configuration info
stylesheet  = /gbrowse/gbrowse.css
buttons     = /gbrowse/images/buttons
tmpimages   = /gbrowse/tmp

header =  sub {
        delete $ENV{REQUEST_METHOD};
        return qx!/xraid/bioware/gmod/mblweb-gmod/cgi-bin/site page=header organism=blochmannia05 noheader=T!;
 }
footer = sub {
        delete $ENV{REQUEST_METHOD};
        return qx!/xraid/bioware/gmod/mblweb-gmod/cgi-bin/site page=footer organism=blochmannia05 noheader=T!;
 }

# Default glyph settings
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = cyan
label density = 25
bump density  = 100

# where to link to when user clicks in detailed view

# what image widths to offer
image widths  = 300 450 640 800 1024 1200 1400 1500 1700 2000

# default width of detailed view (pixels)
default width = 800
default features = supercontig contig ORF

# max and default segment sizes for detailed view
max segment     = 1500000
default segment = 50000

# zoom levels
zoom levels    = 100 200 500 1000 2000 5000 10000 20000 40000 100000 200000 500000 1000000

# colors of the overview, detailed map and key
overview bgcolor = lightgrey
detailed bgcolor = lightgoldenrodyellow
key bgcolor      = beige

# examples to show in the introduction
examples = contig_1 
	   supercontig_13

# "automatic" classes to try when an unqualified identifier is given
automatic classes = Symbol Gene Clone contig supercontig sagetag orf

# Various places where you can insert your own HTML -- see configuration docs
html1 = 
html2 = 
html3 = 
html4 = 
html5 = 
html6 = 

### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

[Contig]
feature      = contig:ARACHNE
glyph        = generic
bgcolor      = yellow
forwardcolor = yellow
reversecolor = turquoise
strand_arrow = 1
height       = 6
description  = 1
link         = sub
                {
                        my $feature = shift;
                        return '/perl/site/blochmannia05?page=showcontig&contig=' . $feature->name();
                }
key          = Contig

[Contig:overview]
feature      = contig:ARACHNE
glyph        = generic
bgcolor      = yellow
forwardcolor = yellow
reversecolor = turquoise
strand_arrow = 1
height       =3 
description  = 1

[IntergenicBlastx]
feature      = match:blastx
glyph        = generic
bgcolor      = yellow
forwardcolor = yellow
reversecolor = turquoise
strand_arrow = 1
height       = 6
description  = 1
link         = AUTO
key          = Intergenic Blastx Hits
 
[Read]
feature      = read:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
connector    = 1
height       = 6
description  = 0
title        = \&read_title
group_pattern = /\...\.SCF$/
draw_dna    = 1
link          = \&read_link
citation    = Reads whose partners have been placed in the same contig.  The colors of the reads will show red if the insert size was larger then expected, and pink if the insert size is smaller then expected.
key          = Read, partner internal
 
[ReadPartUnplaced]
feature      = unplaced-partner:read
glyph        = generic
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
draw_dna    = 1
title        = \&read_title
link          = \&read_link
key          = Read, partner unplaced
 
[ReadPartMissing]
feature      = missing-partner:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
draw_dna    = 1
link          = \&read_link
key          = Read, partner missing
 
[ReadPartDiffContigNeg]
feature      = partner-different-contig-negative-gap:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
group_pattern = /\...\.SCF$/
draw_dna    = 1
title        = \&read_title
link          = \&read_link
key          = Read, partner in different contig, negative gap
 
[ReadPartDiffContigPos]
feature      = partner-different-contig-positive-gap:read
glyph        = segments
bgcolor      = \&read_insert_color
strand_arrow = 1
connector = 1
draw_dna    = 1
height       = 6
description  = 0
title        = \&read_title
group_pattern = /\...\.SCF$/
link          = \&read_link
key          = Read, partner in different contig, positive gap
 
[ReadPartDiffContigSameDir]
feature      = partner-different-contig-same-direction:read partner-orientation-error:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
group_pattern = /\...\.SCF$/
draw_dna    = 1
title        = \&read_title
link          = \&read_link
key          = Read, orientation error
                                                                                           
[ReadPartDiffSuper]
feature      = partner-different-supercontig:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
draw_dna    = 1
title        = \&read_title
link          = \&read_link
key          = Read, partner in different supercontig
 
[ORFs]
feature       = ORF 
glyph         = arrow
label   = \&orf_name
fgcolor =  sub {
        my $feature = shift;
        my $attr_score = 1;
        if($feature->attributes('CodonPreference') eq 'P')
        {
                $attr_score++;
        }
        if($feature->attributes('GeneScan') eq 'P')
        {
                $attr_score++;
        }
        if($feature->attributes('TestCode') eq 'P')
        {
                $attr_score++;
        }
        if( ($feature->attributes('SwissProt') ne 'No significant SwissProt Hit') ||
	    ($feature->attributes('nr') ne 'No significant nr Hit') )
        {
                $attr_score++;
        }
        if($attr_score == 1)
        {
                return 'red';
        }
        if($attr_score == 2)
        {
                return 'orange';
        }
        if($attr_score == 3)
        {
                return 'yellow';
        }
        if($attr_score == 4)
        {
                return 'blue';
        }
        if($attr_score >= 5)
        {
                return 'violet';
        }
        return 'yellow';
    }
bgcolor = yellow
title        = sub {
                my $feature = shift;
                my $pfam = $feature->attributes('Pfam_ls');
                my $pfam_text = 'Pfam_ls: No significant Pfam_ls hit';
                if(scalar $pfam == 0)
                {
                        $pfam_text = 'Pfam_ls: ' . $feature->attributes('Pfam_ls');
                } else
                {
                }
                my $title_value = 'ORF:' . $feature->name .  ':' . $feature->ref . ':' . $feature->start . '...' . $feature->stop . "\n" .
                                'TC-' . $feature->attributes('TestCode') .
                                ':GS-' . $feature->attributes('GeneScan') .
                                ':CP-' . $feature->attributes('CodonPreference') . "\n\n" .
                                'SwissProt: ' . $feature->attributes('SwissProt') . "\n\n" .
                                'NR: ' .  $feature->attributes('nr') . "\n\n" .
                                $pfam_text;
                return $title_value;
  }
linewidth    = 4
height        = 10
description   = 1
link          = \&orf_link
key           = ORF


#[CDS]
#feature      = coding:sgd
#glyph        = cds
#frame0f      = cadetblue
#frame1f      = blue
#frame2f      = darkblue
#frame0r      = darkred
#frame1r      = red
#frame2r      = crimson
#description  = 0
#height       = 13
#label        = CDS frame
#key          = CDS
#citation     = This track shows CDS reading frames.

[tRNAs]
feature       = tRNA
glyph         = generic
bgcolor       = lightgray
fgcolor       = black
height        = 4
stranded      = 1
link 	      = AUTO
description   = 1
key           = tRNAs


[RepeatRegion]
feature       = repeat_region
fgcolor       = black
glyph         = anchored_arrow
height        = 4
key           = Repeat Regions

[PreviousAssembly]
feature      = reference_match:MUMmer
glyph        = segments
bgcolor       = black
strand_arrow = 1
height       = 6
description  = 1
group_pattern = /.+/
draw_dna    = 1
link          = AUTO
key          = Previous Assembly Contigs

[Coverage]
feature      = overlap_coverage
glyph        = xyplot
graph_type   = boxes
height       = 50
min_score    = 0
max_score    = 30
graph_type   = line
scale        = right
key          = Read Overlap Coverage

[DNA/GC Content]
glyph        = dna
global feature = 1
height       = 40
do_gc        = 1
fgcolor      = red
axis_color   = blue
                                                                                                                                                                                    
[Translation]
glyph        = translation
global feature = 1
height       = 40
fgcolor      = blue
start_codons = 1
stop_codons  = 1
translation  = 6frame
key          = 6-frame translation

[AlignTwoSequences:plugin]
bl2seq_executable = /xraid/bioware/linux/blast/bin/bl2seq


